;;;
;;; Redwoods export of `wsj04d';
;;; (wsun@wsun; 22-jan-2018 (14:25 h)).
;;;

[20466017] (1 of 1) {1} `But Burger King operators independently confirm using Michael's product.'

[20466017:0] (active)

<
  (1, 0, 1, <0:3>, 1, "But", 0, "null", "CC" 1.0)
  (2, 1, 2, <4:10>, 1, "Burger", 0, "null", "NNP" 1.0)
  (3, 2, 3, <11:15>, 1, "King", 0, "null", "NNP" 1.0)
  (4, 3, 4, <16:25>, 1, "operators", 0, "null", "NNS" 1.0)
  (5, 4, 5, <26:39>, 1, "independently", 0, "null", "RB" 1.0)
  (6, 5, 6, <40:47>, 1, "confirm", 0, "null", "VBP" 0.9046 "VB" 0.0954)
  (7, 6, 7, <48:53>, 1, "using", 0, "null", "VBG" 1.0)
  (8, 7, 8, <54:61>, 1, "Michael", 0, "null", "NNP" 1.0)
  (9, 8, 9, <61:63>, 1, "’s", 0, "null", "NNS" 0.6012 "JJ" 0.2112 "NN" 0.1032 "VBZ" 0.0754 "CD" 0.0089)
  (10, 9, 10, <64:71>, 1, "product", 0, "null", "NN" 1.0)
  (11, 10, 11, <71:72>, 1, ".", 0, "null", "." 1.0)
>

<
  (151, 0, 1, <0:3>, 1, "but", 0, "null")
  (164, 0, 1, <0:3>, 1, "but", 0, "null")
  (103, 1, 2, <4:10>, 1, "Burger", 0, "null")
  (141, 1, 2, <4:10>, 1, "Burger", 0, "null", "NNP" 1.0)
  (148, 1, 2, <4:10>, 1, "burger", 0, "null")
  (152, 1, 2, <4:10>, 1, "burger", 0, "null")
  (104, 2, 3, <11:15>, 1, "King", 0, "null")
  (142, 2, 3, <11:15>, 1, "King", 0, "null", "NNP" 1.0)
  (149, 2, 3, <11:15>, 1, "king", 0, "null")
  (153, 2, 3, <11:15>, 1, "king", 0, "null")
  (126, 3, 4, <16:25>, 1, "operators", 0, "null")
  (144, 3, 4, <16:25>, 1, "operators", 0, "null", "NNS" 1.0)
  (155, 3, 4, <16:25>, 1, "operators", 0, "null")
  (128, 4, 5, <26:39>, 1, "independently", 0, "null")
  (145, 4, 5, <26:39>, 1, "independently", 0, "null", "RB" 1.0)
  (156, 4, 5, <26:39>, 1, "independently", 0, "null")
  (133, 5, 6, <40:47>, 1, "confirm", 0, "null")
  (137, 5, 6, <40:47>, 1, "confirm", 0, "null", "VBP" 0.9046)
  (159, 5, 6, <40:47>, 1, "confirm", 0, "null")
  (130, 6, 7, <48:53>, 1, "using", 0, "null")
  (146, 6, 7, <48:53>, 1, "using", 0, "null", "VBG" 1.0)
  (157, 6, 7, <48:53>, 1, "using", 0, "null")
  (105, 7, 8, <54:61>, 1, "Michael", 0, "null")
  (143, 7, 8, <54:61>, 1, "Michael", 0, "null", "NNP" 1.0)
  (150, 7, 8, <54:61>, 1, "michael", 0, "null")
  (154, 7, 8, <54:61>, 1, "michael", 0, "null")
  (135, 8, 9, <61:63>, 1, "’s", 0, "null")
  (138, 8, 9, <61:63>, 1, "’s", 0, "null", "NNS" 0.6012)
  (139, 8, 9, <61:63>, 1, "’s", 0, "null", "JJ" 0.2112)
  (140, 8, 9, <61:63>, 1, "’s", 0, "null", "NN" 0.1032)
  (160, 8, 9, <61:63>, 1, "’s", 0, "null")
  (132, 9, 10, <64:72>, 1, "product.", 0, "null")
  (147, 9, 10, <64:72>, 1, "product.", 0, "null", "NN" 1.0)
  (158, 9, 10, <64:72>, 1, "product.", 0, "null")
>

(ROOT_STRICT
 (3610 CL_CNJ-FRG_C 11.4393 0 10
  (3609 MRK-NH_CL_C 10.5695 0 10
   (167 but_conj@c_xp_but_le 1.93884 0 1
    ("but" 151
     "token [ +CARG \"But\" +CLASS alphabetic [ +CASE capitalized+lower +INITIAL + ] +FORM \"but\" +FROM #1=\"0\" +ID *diff-list* [ LAST #2=*list* LIST *cons* [ FIRST \"1\" REST #2 ] ] +PRED predsort +TICK bool +TNT null_tnt [ +MAIN tnt_main [ +PRB \"1\" +TAG \"CC\" ] +PRBS *null* +TAGS *null* ] +TO \"3\" +TRAIT token_trait [ +HD token_head [ +LL ctype [ -CTYPE- string ] +TG string +TI #1 ] +IT italics +LB bracket_null +RB bracket_null +UW - ] ]"))
   (3608 SB-HD_MC_C 8.15681 1 10
    (3594 HDN_BNP_C 1.73537 1 4
     (3593 NP-HDN_CPD_C 2.00905 1 4
      (3590 HDN_BNP-PN_C 1.53838 1 3
       (3589 NP-HDN_NME-CPD_C 0.86882 1 3
        (3588 HDN_BNP-PN_C 0.365523 1 2
         (3587 N_SG_ILR -0.386912 1 2
          (181 generic_proper_ne@n_-_pn-gen_le 0 1 2
           ("Burger" 103
            "token [ +CARG #1=\"Burger\" +CLASS proper_ne +FORM #1 +FROM \"4\" +ID *diff-list* [ LAST #2=*list* LIST *cons* [ FIRST \"2\" REST #2 ] ] +PRED predsort +TICK bool +TNT null_tnt [ +MAIN tnt_main [ +PRB \"1\" +TAG \"NNP\" ] +PRBS *null* +TAGS *null* ] +TO \"10\" +TRAIT token_trait [ +HD token_head [ +LL ctype [ -CTYPE- string ] +TG string +TI string ] +IT italics +LB bracket_null +RB bracket_null +UW + ] ]"))))
        (201 king_n2@n_-_pn_le 0 2 3
         ("king" 149
          "token [ +CARG \"King\" +CLASS alphabetic [ +CASE capitalized+lower +INITIAL - ] +FORM \"king\" +FROM #1=\"11\" +ID *diff-list* [ LAST #2=*list* LIST *cons* [ FIRST \"3\" REST #2 ] ] +PRED predsort +TICK bool +TNT null_tnt [ +MAIN tnt_main [ +PRB \"1\" +TAG \"NNP\" ] +PRBS *null* +TAGS *null* ] +TO \"15\" +TRAIT token_trait [ +HD token_head [ +LL ctype [ -CTYPE- string ] +TG string +TI #1 ] +IT italics +LB bracket_null +RB bracket_null +UW - ] ]"))))
      (3592 ^HDN_OPTCMP_C 0.365271 3 4
       (3591 N_PL_OLR 0.539383 3 4
        (207 operator_n1@n_pp_c-of_le 0 3 4
         ("operators" 126
          "token [ +CARG #1=\"operators\" +CLASS alphabetic [ +CASE non_capitalized+lower +INITIAL - ] +FORM #1 +FROM #2=\"16\" +ID *diff-list* [ LAST #3=*list* LIST *cons* [ FIRST \"4\" REST #3 ] ] +PRED predsort +TICK bool +TNT null_tnt [ +MAIN tnt_main [ +PRB \"1\" +TAG \"NNS\" ] +PRBS *null* +TAGS *null* ] +TO \"25\" +TRAIT token_trait [ +HD token_head [ +LL ctype [ -CTYPE- string ] +TG string +TI #2 ] +IT italics +LB bracket_null +RB bracket_null +UW - ] ]"))))))
    (3607 ^AJ-HD_INT_C 5.32446 4 10
     (218 independently_isect@av_-_i-vp_le 0 4 5
      ("independently" 128
       "token [ +CARG #1=\"independently\" +CLASS alphabetic [ +CASE non_capitalized+lower +INITIAL - ] +FORM #1 +FROM #2=\"26\" +ID *diff-list* [ LAST #3=*list* LIST *cons* [ FIRST \"5\" REST #3 ] ] +PRED predsort +TICK bool +TNT null_tnt [ +MAIN tnt_main [ +PRB \"1\" +TAG \"RB\" ] +PRBS *null* +TAGS *null* ] +TO \"39\" +TRAIT token_trait [ +HD token_head [ +LL ctype [ -CTYPE- string ] +TG string +TI #2 ] +IT italics +LB bracket_null +RB bracket_null +UW - ] ]"))
     (3606 ^HD-CMP_U_C 4.24664 5 10
      (3595 ^V_N3S-BSE_ILR 0.26417 5 6
       (221 confirm_v1@v_np*_le 0 5 6
        ("confirm" 133
         "token [ +CARG #1=\"confirm\" +CLASS alphabetic [ +CASE non_capitalized+lower +INITIAL - ] +FORM #1 +FROM #2=\"40\" +ID *diff-list* [ LAST #3=*list* LIST *cons* [ FIRST \"6\" REST #3 ] ] +PRED predsort +TICK bool +TNT null_tnt [ +MAIN tnt_main [ +PRB \"0.90463309999999997\" +TAG \"VBP\" ] +PRBS *null* +TAGS *null* ] +TO \"47\" +TRAIT token_trait [ +HD token_head [ +LL ctype [ -CTYPE- string ] +TG string +TI #2 ] +IT italics +LB bracket_null +RB bracket_null +UW - ] ]")))
      (3605 HDN_BNP-VGER_C 4.24953 6 10
       (3604 VP_NP-GER_C 4.64149 6 10
        (3603 HD-CMP_U_C 4.71328 6 10
         (3596 ^V_PRP_OLR 0.458809 6 7
          (240 use_v1@v_np_le 0.1527 6 7
           ("using" 130
            "token [ +CARG #1=\"using\" +CLASS alphabetic [ +CASE non_capitalized+lower +INITIAL - ] +FORM #1 +FROM #2=\"48\" +ID *diff-list* [ LAST #3=*list* LIST *cons* [ FIRST \"7\" REST #3 ] ] +PRED predsort +TICK bool +TNT null_tnt [ +MAIN tnt_main [ +PRB \"1\" +TAG \"VBG\" ] +PRBS *null* +TAGS *null* ] +TO \"53\" +TRAIT token_trait [ +HD token_head [ +LL ctype [ -CTYPE- string ] +TG string +TI #2 ] +IT italics +LB bracket_null +RB bracket_null +UW - ] ]")))
         (3602 SP-HD_N_C 3.43425 7 10
          (3599 SP-HD_HC_C 3.17637 7 9
           (3598 HDN_BNP-PN_C 0.854292 7 8
            (3597 N_SG_ILR 0.23946 7 8
             (266 michael_n1@n_-_pn_le 0.543467 7 8
              ("michael" 150
               "token [ +CARG \"Michael\" +CLASS alphabetic [ +CASE capitalized+lower +INITIAL - ] +FORM \"michael\" +FROM #1=\"54\" +ID *diff-list* [ LAST #2=*list* LIST *cons* [ FIRST \"8\" REST #2 ] ] +PRED predsort +TICK bool +TNT null_tnt [ +MAIN tnt_main [ +PRB \"1\" +TAG \"NNP\" ] +PRBS *null* +TAGS *null* ] +TO \"61\" +TRAIT token_trait [ +HD token_head [ +LL ctype [ -CTYPE- string ] +TG string +TI #1 ] +IT italics +LB bracket_null +RB bracket_null +UW - ] ]"))))
           (270 apostrophe_s_12_lex@n_-_cl-poss_le 0.028441 8 9
            ("’s" 135
             "token [ +CARG #1=\"’s\" +CLASS non_alphanumeric [ +INITIAL - ] +FORM #1 +FROM #2=\"61\" +ID *diff-list* [ LAST #3=*list* LIST *cons* [ FIRST \"9\" REST #3 ] ] +PRED predsort +TICK bool +TNT null_tnt [ +MAIN tnt_main [ +PRB \"0.60123559999999998\" +TAG \"NNS\" ] +PRBS *null* +TAGS *null* ] +TO \"63\" +TRAIT token_trait [ +HD token_head [ +LL ctype [ -CTYPE- string ] +TG string +TI #2 ] +IT italics +LB bracket_null +RB bracket_null +UW - ] ]")))
          (3601 ^W_PERIOD_PLR 0.353022 9 10
           (3600 N_MS-CNT_ILR 0.175793 9 10
            (531 product_n1@n_-_mc_le 0 9 10
             ("product." 132
              "token [ +CARG \"product\" +CLASS alphabetic [ +CASE non_capitalized+lower +INITIAL - ] +FORM \"product.\" +FROM #1=\"64\" +ID *diff-list* [ LAST #2=*list* LIST *cons* [ FIRST \"10\" REST *cons* [ FIRST \"11\" REST #2 ] ] ] +PRED predsort +TICK bool +TNT null_tnt [ +MAIN tnt_main [ +PRB \"1\" +TAG \"NN\" ] +PRBS *null* +TAGS *null* ] +TO \"72\" +TRAIT token_trait [ +HD token_head [ +LL ctype [ -CTYPE- string ] +TG string +TI #1 ] +IT italics +LB bracket_null +RB bracket_null +UW - ] ]"))))))))))))))

(S
 (S (CONJ "but")
  (S
   (NP
    (N (NP (N (NP (N (N "Burger"))) (N "king")))
     (N (N (N "operators")))))
   (VP (ADV "independently")
    (VP (V (V "confirm"))
     (NP
      (N
       (VP (V (V "using"))
        (NP (DET (NP (N (N "michael"))) (DET "’s"))
         (N (N (N "product."))))))))))))


 [ TOP: h1
   INDEX: e3 [ e SF: PROP TENSE: UNTENSED MOOD: INDICATIVE PROG: - PERF: - ]
   RELS: <
          [ _but_c<0:3>
            LBL: h2
            ARG0: e3
            L-HNDL: u6
            L-INDEX: i7
            R-HNDL: h5
            R-INDEX: e4 [ e SF: PROP TENSE: PRES MOOD: INDICATIVE PROG: - PERF: - ] ]
          [ udef_q<4:25>
            LBL: h8
            ARG0: x10 [ x PERS: 3 NUM: PL IND: + ]
            RSTR: h9
            BODY: h11 ]
          [ compound<4:25>
            LBL: h12
            ARG0: e14 [ e SF: PROP TENSE: UNTENSED MOOD: INDICATIVE PROG: - PERF: - ]
            ARG1: x10
            ARG2: x13 [ x IND: + ] ]
          [ proper_q<4:15>
            LBL: h15
            ARG0: x13
            RSTR: h16
            BODY: h17 ]
          [ compound<4:15>
            LBL: h18
            ARG0: e20 [ e SF: PROP TENSE: UNTENSED MOOD: INDICATIVE PROG: - PERF: - ]
            ARG1: x13
            ARG2: x19 [ x PERS: 3 NUM: SG IND: + ] ]
          [ proper_q<4:10>
            LBL: h21
            ARG0: x19
            RSTR: h22
            BODY: h23 ]
          [ named<4:10>
            LBL: h24
            ARG0: x19
            CARG: "Burger" ]
          [ named<11:15>
            LBL: h18
            ARG0: x13
            CARG: "King" ]
          [ _operator_n_of<16:25>
            LBL: h12
            ARG0: x10
            ARG1: i25 ]
          [ _independent_a_of<26:39>
            LBL: h26
            ARG0: e27 [ e SF: PROP TENSE: UNTENSED MOOD: INDICATIVE PROG: - PERF: - ]
            ARG1: e4 ]
          [ _confirm_v_as<40:47>
            LBL: h26
            ARG0: e4
            ARG1: x10
            ARG2: x28 [ x PERS: 3 NUM: SG GEND: N ] ]
          [ udef_q<48:72>
            LBL: h29
            ARG0: x28
            RSTR: h30
            BODY: h31 ]
          [ nominalization<48:72>
            LBL: h32
            ARG0: x28
            ARG1: h33 ]
          [ _use_v_1<48:53>
            LBL: h33
            ARG0: e34 [ e SF: PROP TENSE: UNTENSED MOOD: INDICATIVE PROG: + PERF: - ]
            ARG1: i36
            ARG2: x35 [ x PERS: 3 NUM: SG ] ]
          [ proper_q<54:61>
            LBL: h37
            ARG0: x39 [ x PERS: 3 NUM: SG IND: + ]
            RSTR: h38
            BODY: h40 ]
          [ named<54:61>
            LBL: h41
            ARG0: x39
            CARG: "Michael" ]
          [ def_explicit_q<61:63>
            LBL: h42
            ARG0: x35
            RSTR: h43
            BODY: h44 ]
          [ poss<61:63>
            LBL: h45
            ARG0: e46 [ e SF: PROP TENSE: UNTENSED MOOD: INDICATIVE PROG: - PERF: - ]
            ARG1: x35
            ARG2: x39 ]
          [ _product_n_1<64:72>
            LBL: h45
            ARG0: x35 ] >
   HCONS: < h43 QEQ h45 h38 QEQ h41 h30 QEQ h32 h22 QEQ h24 h16 QEQ h18 h9 QEQ h12 h5 QEQ h26 h1 QEQ h2 > ]

{e3:
 e3:_but_c<0:3>{e SF prop, TENSE untensed, MOOD indicative, PROG -, PERF -}[R-HNDL e4, R-INDEX e4]
 _1:udef_q<4:25>[BV x10]
 e14:compound<4:25>{e SF prop, TENSE untensed, MOOD indicative, PROG -, PERF -}[ARG1 x10, ARG2 x13]
 _2:proper_q<4:15>[BV x13]
 e20:compound<4:15>{e SF prop, TENSE untensed, MOOD indicative, PROG -, PERF -}[ARG1 x13, ARG2 x19]
 _3:proper_q<4:10>[BV x19]
 x19:named<4:10>("Burger"){x PERS 3, NUM sg, IND +}[]
 x13:named<11:15>("King"){x IND +}[]
 x10:_operator_n_of<16:25>{x PERS 3, NUM pl, IND +}[]
 e27:_independent_a_of<26:39>{e SF prop, TENSE untensed, MOOD indicative, PROG -, PERF -}[ARG1 e4]
 e4:_confirm_v_as<40:47>{e SF prop, TENSE pres, MOOD indicative, PROG -, PERF -}[ARG1 x10, ARG2 x28]
 _4:udef_q<48:72>[BV x28]
 x28:nominalization<48:72>{x PERS 3, NUM sg, GEND n}[ARG1 e34]
 e34:_use_v_1<48:53>{e SF prop, TENSE untensed, MOOD indicative, PROG +, PERF -}[ARG2 x35]
 _5:proper_q<54:61>[BV x39]
 x39:named<54:61>("Michael"){x PERS 3, NUM sg, IND +}[]
 _6:def_explicit_q<61:63>[BV x35]
 e46:poss<61:63>{e SF prop, TENSE untensed, MOOD indicative, PROG -, PERF -}[ARG1 x35, ARG2 x39]
 x35:_product_n_1<64:72>{x PERS 3, NUM sg}[]
}

{
  _but_c<0:3> R-HNDL _confirm_v_as<40:47>  
  _but_c<0:3> R-INDEX _confirm_v_as<40:47>  
  udef_q<4:25> BV _operator_n_of<16:25>  
  compound<4:25> ARG1 _operator_n_of<16:25>  
  compound<4:25> ARG2 named<11:15>(King)  
  proper_q<4:15> BV named<11:15>(King)  
  compound<4:15> ARG1 named<11:15>(King)  
  compound<4:15> ARG2 named<4:10>(Burger)  
  proper_q<4:10> BV named<4:10>(Burger)  
  _independent_a_of<26:39> ARG1 _confirm_v_as<40:47>  
  _confirm_v_as<40:47> ARG1 _operator_n_of<16:25>  
  _confirm_v_as<40:47> ARG2 nominalization<48:72>  
  udef_q<48:72> BV nominalization<48:72>  
  nominalization<48:72> ARG1 _use_v_1<48:53>  
  _use_v_1<48:53> ARG2 _product_n_1<64:72>  
  proper_q<54:61> BV named<54:61>(Michael)  
  def_explicit_q<61:63> BV _product_n_1<64:72>  
  poss<61:63> ARG1 _product_n_1<64:72>  
  poss<61:63> ARG2 named<54:61>(Michael)  
  _but_c<0:3> SF prop  
  _but_c<0:3> TENSE untensed  
  _but_c<0:3> MOOD indicative  
  _but_c<0:3> PROG -  
  _but_c<0:3> PERF -  
  compound<4:25> SF prop  
  compound<4:25> TENSE untensed  
  compound<4:25> MOOD indicative  
  compound<4:25> PROG -  
  compound<4:25> PERF -  
  compound<4:15> SF prop  
  compound<4:15> TENSE untensed  
  compound<4:15> MOOD indicative  
  compound<4:15> PROG -  
  compound<4:15> PERF -  
  named<4:10>(Burger) PERS 3  
  named<4:10>(Burger) NUM sg  
  named<4:10>(Burger) IND +  
  named<11:15>(King) IND +  
  _operator_n_of<16:25> PERS 3  
  _operator_n_of<16:25> NUM pl  
  _operator_n_of<16:25> IND +  
  _independent_a_of<26:39> SF prop  
  _independent_a_of<26:39> TENSE untensed  
  _independent_a_of<26:39> MOOD indicative  
  _independent_a_of<26:39> PROG -  
  _independent_a_of<26:39> PERF -  
  _confirm_v_as<40:47> SF prop  
  _confirm_v_as<40:47> TENSE pres  
  _confirm_v_as<40:47> MOOD indicative  
  _confirm_v_as<40:47> PROG -  
  _confirm_v_as<40:47> PERF -  
  nominalization<48:72> PERS 3  
  nominalization<48:72> NUM sg  
  nominalization<48:72> GEND n  
  _use_v_1<48:53> SF prop  
  _use_v_1<48:53> TENSE untensed  
  _use_v_1<48:53> MOOD indicative  
  _use_v_1<48:53> PROG +  
  _use_v_1<48:53> PERF -  
  named<54:61>(Michael) PERS 3  
  named<54:61>(Michael) NUM sg  
  named<54:61>(Michael) IND +  
  poss<61:63> SF prop  
  poss<61:63> TENSE untensed  
  poss<61:63> MOOD indicative  
  poss<61:63> PROG -  
  poss<61:63> PERF -  
  _product_n_1<64:72> PERS 3  
  _product_n_1<64:72> NUM sg  
}

