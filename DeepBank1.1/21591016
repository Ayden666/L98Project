;;;
;;; Redwoods export of `wsj15d';
;;; (wsun@wsun; 23-jan-2018 (00:47 h)).
;;;

[21591016] (1 of 1) {1} `The Intel 486 chip can process 15 million instructions per second, or MIPS, while Intel's previous 386 chip could handle only 3 to 6 MIPS.'

[21591016:85] (active)

<
  (1, 0, 1, <0:3>, 1, "The", 0, "null", "DT" 1.0)
  (2, 1, 2, <4:9>, 1, "Intel", 0, "null", "NNP" 1.0)
  (3, 2, 3, <10:13>, 1, "486", 0, "null", "CD" 1.0)
  (4, 3, 4, <14:18>, 1, "chip", 0, "null", "NN" 1.0)
  (5, 4, 5, <19:22>, 1, "can", 0, "null", "MD" 1.0)
  (6, 5, 6, <23:30>, 1, "process", 0, "null", "VB" 0.9766 "NN" 0.0234)
  (7, 6, 7, <31:33>, 1, "15", 0, "null", "CD" 1.0)
  (8, 7, 8, <34:41>, 1, "million", 0, "null", "CD" 1.0)
  (9, 8, 9, <42:54>, 1, "instructions", 0, "null", "NNS" 1.0)
  (10, 9, 10, <55:58>, 1, "per", 0, "null", "IN" 1.0)
  (11, 10, 11, <59:65>, 1, "second", 0, "null", "JJ" 0.8805 "NN" 0.1195)
  (12, 11, 12, <65:66>, 1, ",", 0, "null", "," 1.0)
  (13, 12, 13, <67:69>, 1, "or", 0, "null", "CC" 1.0)
  (14, 13, 14, <70:74>, 1, "MIPS", 0, "null", "NNP" 0.8978 "NNS" 0.1022)
  (15, 14, 15, <74:75>, 1, ",", 0, "null", "," 1.0)
  (16, 15, 16, <76:81>, 1, "while", 0, "null", "IN" 1.0)
  (17, 16, 17, <82:87>, 1, "Intel", 0, "null", "NNP" 1.0)
  (18, 17, 18, <87:89>, 1, "’s", 0, "null", "NNS" 0.7047 "VBZ" 0.2693 "JJ" 0.0156 "NN" 0.0103)
  (19, 18, 19, <90:98>, 1, "previous", 0, "null", "JJ" 1.0)
  (20, 19, 20, <99:102>, 1, "386", 0, "null", "CD" 1.0)
  (21, 20, 21, <103:107>, 1, "chip", 0, "null", "NN" 1.0)
  (22, 21, 22, <108:113>, 1, "could", 0, "null", "MD" 1.0)
  (23, 22, 23, <114:120>, 1, "handle", 0, "null", "VB" 1.0)
  (24, 23, 24, <121:125>, 1, "only", 0, "null", "RB" 0.9743 "JJ" 0.0257)
  (25, 24, 25, <126:127>, 1, "3", 0, "null", "CD" 1.0)
  (26, 25, 26, <128:130>, 1, "to", 0, "null", "TO" 1.0)
  (27, 26, 27, <131:132>, 1, "6", 0, "null", "CD" 1.0)
  (28, 27, 28, <133:137>, 1, "MIPS", 0, "null", "NNS" 0.8396 "NNP" 0.1604)
  (29, 28, 29, <137:138>, 1, ".", 0, "null", "." 1.0)
>

<
  (343, 0, 1, <0:3>, 1, "the", 0, "null")
  (375, 0, 1, <0:3>, 1, "the", 0, "null")
  (257, 1, 2, <4:9>, 1, "Intel", 0, "null")
  (331, 1, 2, <4:9>, 1, "Intel", 0, "null", "NNP" 1.0)
  (342, 1, 2, <4:9>, 1, "intel", 0, "null")
  (352, 1, 2, <4:9>, 1, "intel", 0, "null")
  (250, 2, 3, <10:13>, 1, "486", 0, "null")
  (349, 2, 3, <10:13>, 1, "486", 0, "null")
  (308, 3, 4, <14:18>, 1, "chip", 0, "null")
  (337, 3, 4, <14:18>, 1, "chip", 0, "null", "NN" 1.0)
  (365, 3, 4, <14:18>, 1, "chip", 0, "null")
  (310, 4, 5, <19:22>, 1, "can", 0, "null")
  (366, 4, 5, <19:22>, 1, "can", 0, "null")
  (313, 5, 6, <23:30>, 1, "process", 0, "null")
  (324, 5, 6, <23:30>, 1, "process", 0, "null", "VB" 0.9766)
  (368, 5, 6, <23:30>, 1, "process", 0, "null")
  (247, 6, 7, <31:33>, 1, "15", 0, "null")
  (346, 6, 7, <31:33>, 1, "15", 0, "null")
  (288, 7, 8, <34:41>, 1, "million", 0, "null")
  (332, 7, 8, <34:41>, 1, "million", 0, "null", "CD" 1.0)
  (355, 7, 8, <34:41>, 1, "million", 0, "null")
  (290, 8, 9, <42:54>, 1, "instructions", 0, "null")
  (333, 8, 9, <42:54>, 1, "instructions", 0, "null", "NNS" 1.0)
  (356, 8, 9, <42:54>, 1, "instructions", 0, "null")
  (292, 9, 10, <55:58>, 1, "per", 0, "null")
  (357, 9, 10, <55:58>, 1, "per", 0, "null")
  (316, 10, 11, <59:66>, 1, "second,", 0, "null")
  (326, 10, 11, <59:66>, 1, "second,", 0, "null", "JJ" 0.8805)
  (338, 10, 11, <59:66>, 1, "second,", 0, "null", "NN" 0.1195)
  (370, 10, 11, <59:66>, 1, "second,", 0, "null")
  (294, 11, 12, <67:69>, 1, "or", 0, "null")
  (358, 11, 12, <67:69>, 1, "or", 0, "null")
  (262, 12, 13, <70:75>, 1, "MIPS,", 0, "null")
  (327, 12, 13, <70:75>, 1, "MIPS,", 0, "null", "NNP" 0.8978)
  (339, 12, 13, <70:75>, 1, "MIPS,", 0, "null", "NNS" 0.1022)
  (344, 12, 13, <70:75>, 1, "mips,", 0, "null")
  (353, 12, 13, <70:75>, 1, "mips,", 0, "null")
  (296, 13, 14, <76:81>, 1, "while", 0, "null")
  (359, 13, 14, <76:81>, 1, "while", 0, "null")
  (256, 14, 15, <82:87>, 1, "Intel", 0, "null")
  (330, 14, 15, <82:87>, 1, "Intel", 0, "null", "NNP" 1.0)
  (341, 14, 15, <82:87>, 1, "intel", 0, "null")
  (351, 14, 15, <82:87>, 1, "intel", 0, "null")
  (315, 15, 16, <87:89>, 1, "’s", 0, "null")
  (325, 15, 16, <87:89>, 1, "’s", 0, "null", "NNS" 0.7047)
  (329, 15, 16, <87:89>, 1, "’s", 0, "null", "VBZ" 0.2693)
  (369, 15, 16, <87:89>, 1, "’s", 0, "null")
  (298, 16, 17, <90:98>, 1, "previous", 0, "null")
  (334, 16, 17, <90:98>, 1, "previous", 0, "null", "JJ" 1.0)
  (360, 16, 17, <90:98>, 1, "previous", 0, "null")
  (251, 17, 18, <99:102>, 1, "386", 0, "null")
  (350, 17, 18, <99:102>, 1, "386", 0, "null")
  (300, 18, 19, <103:107>, 1, "chip", 0, "null")
  (335, 18, 19, <103:107>, 1, "chip", 0, "null", "NN" 1.0)
  (361, 18, 19, <103:107>, 1, "chip", 0, "null")
  (302, 19, 20, <108:113>, 1, "could", 0, "null")
  (362, 19, 20, <108:113>, 1, "could", 0, "null")
  (304, 20, 21, <114:120>, 1, "handle", 0, "null")
  (336, 20, 21, <114:120>, 1, "handle", 0, "null", "VB" 1.0)
  (363, 20, 21, <114:120>, 1, "handle", 0, "null")
  (311, 21, 22, <121:125>, 1, "only", 0, "null")
  (323, 21, 22, <121:125>, 1, "only", 0, "null", "RB" 0.9743)
  (367, 21, 22, <121:125>, 1, "only", 0, "null")
  (248, 22, 23, <126:127>, 1, "3", 0, "null")
  (347, 22, 23, <126:127>, 1, "3", 0, "null")
  (306, 23, 24, <128:130>, 1, "to", 0, "null")
  (364, 23, 24, <128:130>, 1, "to", 0, "null")
  (249, 24, 25, <131:132>, 1, "6", 0, "null")
  (348, 24, 25, <131:132>, 1, "6", 0, "null")
  (264, 25, 26, <133:138>, 1, "MIPS.", 0, "null")
  (328, 25, 26, <133:138>, 1, "MIPS.", 0, "null", "NNS" 0.8396)
  (340, 25, 26, <133:138>, 1, "MIPS.", 0, "null", "NNP" 0.1604)
  (345, 25, 26, <133:138>, 1, "mips.", 0, "null")
  (354, 25, 26, <133:138>, 1, "mips.", 0, "null")
>

(ROOT_INFORMAL
 (32868 HD-AJ_SCP-PR_C 26.995 0 26
  (32646 ^SB-HD_MC_C 11.1141 0 13
   (32590 SP-HD_N_C 3.30786 0 4
    (388 the_1@d_-_the_le 1.13181 0 1
     ("the" 343
      "token [ +CARG \"The\" +CLASS alphabetic [ +CASE capitalized+lower +INITIAL + ] +FORM \"the\" +FROM #1=\"0\" +ID *diff-list* [ LAST #2=*list* LIST *cons* [ FIRST \"1\" REST #2 ] ] +PRED predsort +TICK bool +TNT null_tnt [ +MAIN tnt_main [ +PRB \"1\" +TAG \"DT\" ] +PRBS *null* +TAGS *null* ] +TO \"3\" +TRAIT token_trait [ +HD token_head [ +LL ctype [ -CTYPE- string ] +TG string +TI #1 ] +IT italics +LB bracket_null +RB bracket_null +UW - ] ]"))
    (32589 ^NP-HDN_CPD_C 1.96649 1 4
     (32588 HDN_BNP-NUM_C 1.24003 1 3
      (32587 NP-HDN_NUM-CPD_C 0.444383 1 3
       (32538 N_SG_ILR -0.166294 1 2
        (415 intel_n1@n_-_pn_le 0 1 2
         ("intel" 342
          "token [ +CARG \"Intel\" +CLASS alphabetic [ +CASE capitalized+lower +INITIAL - ] +FORM \"intel\" +FROM #1=\"4\" +ID *diff-list* [ LAST #2=*list* LIST *cons* [ FIRST \"2\" REST #2 ] ] +PRED predsort +TICK bool +TNT null_tnt [ +MAIN tnt_main [ +PRB \"1\" +TAG \"NNP\" ] +PRBS *null* +TAGS *null* ] +TO \"9\" +TRAIT token_trait [ +HD token_head [ +LL ctype [ -CTYPE- string ] +TG string +TI #1 ] +IT italics +LB bracket_null +RB bracket_null +UW - ] ]")))
       (32586 ^HDN_NP-NUM_C -0.338144 2 3
        (417 generic_card_ne@aj_-_i-crd-gen_le 0 2 3
         ("486" 250
          "token [ +CARG #1=\"486\" +CLASS card_or_year_ne +FORM #1 +FROM \"10\" +ID *diff-list* [ LAST #2=*list* LIST *cons* [ FIRST \"3\" REST #2 ] ] +PRED predsort +TICK bool +TNT null_tnt [ +MAIN tnt_main [ +PRB string +TAG string ] +PRBS *null* +TAGS *null* ] +TO \"13\" +TRAIT token_trait [ +HD token_head [ +LL ctype [ -CTYPE- string ] +TG string +TI string ] +IT italics +LB bracket_null +RB bracket_null +UW + ] ]")))))
     (32543 ^N_SG_ILR 0.295851 3 4
      (421 chip_n1@n_-_c_le 0 3 4
       ("chip" 308
        "token [ +CARG #1=\"chip\" +CLASS alphabetic [ +CASE non_capitalized+lower +INITIAL - ] +FORM #1 +FROM #2=\"14\" +ID *diff-list* [ LAST #3=*list* LIST *cons* [ FIRST \"4\" REST #3 ] ] +PRED predsort +TICK bool +TNT null_tnt [ +MAIN tnt_main [ +PRB \"1\" +TAG \"NN\" ] +PRBS *null* +TAGS *null* ] +TO \"18\" +TRAIT token_trait [ +HD token_head [ +LL ctype [ -CTYPE- string ] +TG string +TI #2 ] +IT italics +LB bracket_null +RB bracket_null +UW - ] ]")))))
   (32642 ^HD-CMP_U_C 6.0604 4 13
    (437 can_aux_pos@v_vp_mdl-p_le 2.02918 4 5
     ("can" 310
      "token [ +CARG #1=\"can\" +CLASS alphabetic [ +CASE non_capitalized+lower +INITIAL - ] +FORM #1 +FROM #2=\"19\" +ID *diff-list* [ LAST #3=*list* LIST *cons* [ FIRST \"5\" REST #3 ] ] +PRED predsort +TICK bool +TNT null_tnt [ +MAIN tnt_main [ +PRB \"1\" +TAG \"MD\" ] +PRBS *null* +TAGS *null* ] +TO \"22\" +TRAIT token_trait [ +HD token_head [ +LL ctype [ -CTYPE- string ] +TG string +TI #2 ] +IT italics +LB bracket_null +RB bracket_null +UW - ] ]"))
    (32641 HD-CMP_U_C 3.19915 5 13
     (32546 ^V_N3S-BSE_ILR 0.218836 5 6
      (441 process_v1@v_np*_le 0 5 6
       ("process" 313
        "token [ +CARG #1=\"process\" +CLASS alphabetic [ +CASE non_capitalized+lower +INITIAL - ] +FORM #1 +FROM #2=\"23\" +ID *diff-list* [ LAST #3=*list* LIST *cons* [ FIRST \"6\" REST #3 ] ] +PRED predsort +TICK bool +TNT null_tnt [ +MAIN tnt_main [ +PRB \"0.97663619999999995\" +TAG \"VB\" ] +PRBS *null* +TAGS *null* ] +TO \"30\" +TRAIT token_trait [ +HD token_head [ +LL ctype [ -CTYPE- string ] +TG string +TI #2 ] +IT italics +LB bracket_null +RB bracket_null +UW - ] ]")))
     (32640 NP-NP_CRD-T_C 2.11544 6 13
      (32555 SP-HD_N_C 2.41383 6 11
       (32548 NUM_DET_C 0.668172 6 8
        (32547 SP-HD_HC_C 0.929936 6 8
         (444 generic_card_ne@aj_-_i-crd-gen_le 0.0305217 6 7
          ("15" 247
           "token [ +CARG #1=\"15\" +CLASS card_or_dom_ne +FORM #1 +FROM \"31\" +ID *diff-list* [ LAST #2=*list* LIST *cons* [ FIRST \"7\" REST #2 ] ] +PRED predsort +TICK bool +TNT null_tnt [ +MAIN tnt_main [ +PRB string +TAG string ] +PRBS *null* +TAGS *null* ] +TO \"33\" +TRAIT token_trait [ +HD token_head [ +LL ctype [ -CTYPE- string ] +TG string +TI string ] +IT italics +LB bracket_null +RB bracket_null +UW + ] ]"))
         (448 million@aj_-_i-crd-mln_le 0.7866 7 8
          ("million" 288
           "token [ +CARG #1=\"million\" +CLASS alphabetic [ +CASE non_capitalized+lower +INITIAL - ] +FORM #1 +FROM #2=\"34\" +ID *diff-list* [ LAST #3=*list* LIST *cons* [ FIRST \"8\" REST #3 ] ] +PRED predsort +TICK bool +TNT null_tnt [ +MAIN tnt_main [ +PRB \"1\" +TAG \"CD\" ] +PRBS *null* +TAGS *null* ] +TO \"41\" +TRAIT token_trait [ +HD token_head [ +LL ctype [ -CTYPE- string ] +TG string +TI #2 ] +IT italics +LB bracket_null +RB bracket_null +UW - ] ]"))))
       (32554 ^HDN-AJ_REDREL_C 1.15963 8 11
        (32550 ^HDN_OPTCMP_C 0.902949 8 9
         (32549 N_PL_OLR 0.461574 8 9
          (452 instruction_n1@n_pp_mc-of_le 0 8 9
           ("instructions" 290
            "token [ +CARG #1=\"instructions\" +CLASS alphabetic [ +CASE non_capitalized+lower +INITIAL - ] +FORM #1 +FROM #2=\"42\" +ID *diff-list* [ LAST #3=*list* LIST *cons* [ FIRST \"9\" REST #3 ] ] +PRED predsort +TICK bool +TNT null_tnt [ +MAIN tnt_main [ +PRB \"1\" +TAG \"NNS\" ] +PRBS *null* +TAGS *null* ] +TO \"54\" +TRAIT token_trait [ +HD token_head [ +LL ctype [ -CTYPE- string ] +TG string +TI #2 ] +IT italics +LB bracket_null +RB bracket_null +UW - ] ]"))))
        (32553 HD-CMP_U_C 0.406548 9 11
         (468 per_p@p_nb_i-per_le 1.22023 9 10
          ("per" 292
           "token [ +CARG #1=\"per\" +CLASS alphabetic [ +CASE non_capitalized+lower +INITIAL - ] +FORM #1 +FROM #2=\"55\" +ID *diff-list* [ LAST #3=*list* LIST *cons* [ FIRST \"10\" REST #3 ] ] +PRED predsort +TICK bool +TNT null_tnt [ +MAIN tnt_main [ +PRB \"1\" +TAG \"IN\" ] +PRBS *null* +TAGS *null* ] +TO \"58\" +TRAIT token_trait [ +HD token_head [ +LL ctype [ -CTYPE- string ] +TG string +TI #2 ] +IT italics +LB bracket_null +RB bracket_null +UW - ] ]"))
         (32552 W_COMMA-NF_PLR -0.813681 10 11
          (32551 N_SG_ILR -0.100931 10 11
           (483 second_n1@n_-_c-nday_le 0 10 11
            ("second," 316
             "token [ +CARG \"second\" +CLASS alphabetic [ +CASE non_capitalized+lower +INITIAL - ] +FORM \"second,\" +FROM #1=\"59\" +ID *diff-list* [ LAST #2=*list* LIST *cons* [ FIRST \"11\" REST *cons* [ FIRST \"12\" REST #2 ] ] ] +PRED predsort +TICK bool +TNT null_tnt [ +MAIN tnt_main [ +PRB \"0.88051199999999996\" +TAG \"JJ\" ] +PRBS *null* +TAGS *null* ] +TO \"66\" +TRAIT token_trait [ +HD token_head [ +LL ctype [ -CTYPE- string ] +TG string +TI #1 ] +IT italics +LB bracket_null +RB bracket_null +UW - ] ]")))))))
      (32639 ^MRK-NH_NOM_C -1.07768 11 13
       (516 or_conj_1@c_xp_or_le -1.27878 11 12
        ("or" 294
         "token [ +CARG #1=\"or\" +CLASS alphabetic [ +CASE non_capitalized+lower +INITIAL - ] +FORM #1 +FROM #2=\"67\" +ID *diff-list* [ LAST #3=*list* LIST *cons* [ FIRST \"13\" REST #3 ] ] +PRED predsort +TICK bool +TNT null_tnt [ +MAIN tnt_main [ +PRB \"1\" +TAG \"CC\" ] +PRBS *null* +TAGS *null* ] +TO \"69\" +TRAIT token_trait [ +HD token_head [ +LL ctype [ -CTYPE- string ] +TG string +TI #2 ] +IT italics +LB bracket_null +RB bracket_null +UW - ] ]"))
       (32638 HDN_BNP_C -0.25973 12 13
        (32637 W_COMMA_PLR -0.650843 12 13
         (32636 N_PL_OLR -0.972848 12 13
          (548 mips_n1@n_-_c-meas_le 0 12 13
           ("mips," 344
            "token [ +CARG \"MIPS\" +CLASS alphabetic [ +CASE capitalized+upper +INITIAL - ] +FORM \"mips,\" +FROM #1=\"70\" +ID *diff-list* [ LAST #2=*list* LIST *cons* [ FIRST \"14\" REST *cons* [ FIRST \"15\" REST #2 ] ] ] +PRED predsort +TICK bool +TNT null_tnt [ +MAIN tnt_main [ +PRB \"0.89780669999999996\" +TAG \"NNP\" ] +PRBS *null* +TAGS *null* ] +TO \"75\" +TRAIT token_trait [ +HD token_head [ +LL ctype [ -CTYPE- string ] +TG string +TI #1 ] +IT italics +LB bracket_null +RB bracket_null +UW - ] ]"))))))))))
  (32651 HD-CMP_U_C 14.7791 13 26
   (567 while@p_cp_s_le 1.10776 13 14
    ("while" 296
     "token [ +CARG #1=\"while\" +CLASS alphabetic [ +CASE non_capitalized+lower +INITIAL - ] +FORM #1 +FROM #2=\"76\" +ID *diff-list* [ LAST #3=*list* LIST *cons* [ FIRST \"16\" REST #3 ] ] +PRED predsort +TICK bool +TNT null_tnt [ +MAIN tnt_main [ +PRB \"1\" +TAG \"IN\" ] +PRBS *null* +TAGS *null* ] +TO \"81\" +TRAIT token_trait [ +HD token_head [ +LL ctype [ -CTYPE- string ] +TG string +TI #2 ] +IT italics +LB bracket_null +RB bracket_null +UW - ] ]"))
   (32650 SB-HD_NMC_C 11.3009 14 26
    (32572 SP-HD_N_C 4.07634 14 19
     (32566 SP-HD_HC_C 2.11266 14 16
      (32565 HDN_BNP-PN_C 0.310825 14 15
       (32564 N_SG_ILR -0.304007 14 15
        (581 intel_n1@n_-_pn_le 0 14 15
         ("intel" 341
          "token [ +CARG \"Intel\" +CLASS alphabetic [ +CASE capitalized+lower +INITIAL - ] +FORM \"intel\" +FROM #1=\"82\" +ID *diff-list* [ LAST #2=*list* LIST *cons* [ FIRST \"17\" REST #2 ] ] +PRED predsort +TICK bool +TNT null_tnt [ +MAIN tnt_main [ +PRB \"1\" +TAG \"NNP\" ] +PRBS *null* +TAGS *null* ] +TO \"87\" +TRAIT token_trait [ +HD token_head [ +LL ctype [ -CTYPE- string ] +TG string +TI #1 ] +IT italics +LB bracket_null +RB bracket_null +UW - ] ]"))))
      (585 apostrophe_s_12_lex@n_-_cl-poss_le 0.028441 15 16
       ("’s" 315
        "token [ +CARG #1=\"’s\" +CLASS non_alphanumeric [ +INITIAL - ] +FORM #1 +FROM #2=\"87\" +ID *diff-list* [ LAST #3=*list* LIST *cons* [ FIRST \"18\" REST #3 ] ] +PRED predsort +TICK bool +TNT null_tnt [ +MAIN tnt_main [ +PRB \"0.70474499999999995\" +TAG \"NNS\" ] +PRBS *null* +TAGS *null* ] +TO \"89\" +TRAIT token_trait [ +HD token_head [ +LL ctype [ -CTYPE- string ] +TG string +TI #2 ] +IT italics +LB bracket_null +RB bracket_null +UW - ] ]")))
     (32571 ^AJ-HDN_NORM_C 1.36776 16 19
      (795 previous_a1@aj_-_i_le -0.120156 16 17
       ("previous" 298
        "token [ +CARG #1=\"previous\" +CLASS alphabetic [ +CASE non_capitalized+lower +INITIAL - ] +FORM #1 +FROM #2=\"90\" +ID *diff-list* [ LAST #3=*list* LIST *cons* [ FIRST \"19\" REST #3 ] ] +PRED predsort +TICK bool +TNT null_tnt [ +MAIN tnt_main [ +PRB \"1\" +TAG \"JJ\" ] +PRBS *null* +TAGS *null* ] +TO \"98\" +TRAIT token_trait [ +HD token_head [ +LL ctype [ -CTYPE- string ] +TG string +TI #2 ] +IT italics +LB bracket_null +RB bracket_null +UW - ] ]"))
      (32570 ^NP-HDN_CPD_C -0.389708 17 19
       (32568 HDN_BNP-PN_C -0.935193 17 18
        (32567 HDN_OPTCMP_C -1.20212 17 18
         (815 generic_year_ne@n_-_pn-yoc-gen_le 0 17 18
          ("386" 251
           "token [ +CARG #1=\"386\" +CLASS card_or_year_ne +FORM #1 +FROM \"99\" +ID *diff-list* [ LAST #2=*list* LIST *cons* [ FIRST \"20\" REST #2 ] ] +PRED predsort +TICK bool +TNT null_tnt [ +MAIN tnt_main [ +PRB string +TAG string ] +PRBS *null* +TAGS *null* ] +TO \"102\" +TRAIT token_trait [ +HD token_head [ +LL ctype [ -CTYPE- string ] +TG string +TI string ] +IT italics +LB bracket_null +RB bracket_null +UW + ] ]"))))
       (32569 ^N_SG_ILR 0.059677 18 19
        (818 chip_n1@n_-_c_le 0 18 19
         ("chip" 300
          "token [ +CARG #1=\"chip\" +CLASS alphabetic [ +CASE non_capitalized+lower +INITIAL - ] +FORM #1 +FROM #2=\"103\" +ID *diff-list* [ LAST #3=*list* LIST *cons* [ FIRST \"21\" REST #3 ] ] +PRED predsort +TICK bool +TNT null_tnt [ +MAIN tnt_main [ +PRB \"1\" +TAG \"NN\" ] +PRBS *null* +TAGS *null* ] +TO \"107\" +TRAIT token_trait [ +HD token_head [ +LL ctype [ -CTYPE- string ] +TG string +TI #2 ] +IT italics +LB bracket_null +RB bracket_null +UW - ] ]"))))))
    (32649 ^HD-CMP_U_C 6.20897 19 26
     (835 could_aux_pos2@v_vp_mdl-p-pst_le -0.37174 19 20
      ("could" 302
       "token [ +CARG #1=\"could\" +CLASS alphabetic [ +CASE non_capitalized+lower +INITIAL - ] +FORM #1 +FROM #2=\"108\" +ID *diff-list* [ LAST #3=*list* LIST *cons* [ FIRST \"22\" REST #3 ] ] +PRED predsort +TICK bool +TNT null_tnt [ +MAIN tnt_main [ +PRB \"1\" +TAG \"MD\" ] +PRBS *null* +TAGS *null* ] +TO \"113\" +TRAIT token_trait [ +HD token_head [ +LL ctype [ -CTYPE- string ] +TG string +TI #2 ] +IT italics +LB bracket_null +RB bracket_null +UW - ] ]"))
     (32581 HD-CMP_U_C 6.33297 20 26
      (32573 ^V_N3S-BSE_ILR -0.366315 20 21
       (837 handle_v1@v_np_le 0 20 21
        ("handle" 304
         "token [ +CARG #1=\"handle\" +CLASS alphabetic [ +CASE non_capitalized+lower +INITIAL - ] +FORM #1 +FROM #2=\"114\" +ID *diff-list* [ LAST #3=*list* LIST *cons* [ FIRST \"23\" REST #3 ] ] +PRED predsort +TICK bool +TNT null_tnt [ +MAIN tnt_main [ +PRB \"1\" +TAG \"VB\" ] +PRBS *null* +TAGS *null* ] +TO \"120\" +TRAIT token_trait [ +HD token_head [ +LL ctype [ -CTYPE- string ] +TG string +TI #2 ] +IT italics +LB bracket_null +RB bracket_null +UW - ] ]")))
      (32580 SP-HD_HC_C 6.58598 21 26
       (851 only_deg@av_-_dg-jomv_le 0.965091 21 22
        ("only" 311
         "token [ +CARG #1=\"only\" +CLASS alphabetic [ +CASE non_capitalized+lower +INITIAL - ] +FORM #1 +FROM #2=\"121\" +ID *diff-list* [ LAST #3=*list* LIST *cons* [ FIRST \"24\" REST #3 ] ] +PRED predsort +TICK bool +TNT null_tnt [ +MAIN tnt_main [ +PRB \"0.97427490000000005\" +TAG \"RB\" ] +PRBS *null* +TAGS *null* ] +TO \"125\" +TRAIT token_trait [ +HD token_head [ +LL ctype [ -CTYPE- string ] +TG string +TI #2 ] +IT italics +LB bracket_null +RB bracket_null +UW - ] ]"))
       (32579 ^HDN_BNP_C 4.09093 22 26
        (32578 NUM-N_MNP_C 2.24153 22 26
         (32575 SP-HD_HC_C 1.7114 22 25
          (888 generic_card_ne@aj_-_i-crd-gen_le 0 22 23
           ("3" 248
            "token [ +CARG #1=\"3\" +CLASS card_or_dom_ne +FORM #1 +FROM \"126\" +ID *diff-list* [ LAST #2=*list* LIST *cons* [ FIRST \"25\" REST #2 ] ] +PRED predsort +TICK bool +TNT null_tnt [ +MAIN tnt_main [ +PRB string +TAG string ] +PRBS *null* +TAGS *null* ] +TO \"127\" +TRAIT token_trait [ +HD token_head [ +LL ctype [ -CTYPE- string ] +TG string +TI string ] +IT italics +LB bracket_null +RB bracket_null +UW + ] ]"))
          (32574 ^HD-CMP_U_C 1.60009 23 25
           (933 x_to_y_adj_to@aj_pp_i-x-to-y_le 0.208064 23 24
            ("to" 306
             "token [ +CARG #1=\"to\" +CLASS alphabetic [ +CASE non_capitalized+lower +INITIAL - ] +FORM #1 +FROM #2=\"128\" +ID *diff-list* [ LAST #3=*list* LIST *cons* [ FIRST \"26\" REST #3 ] ] +PRED predsort +TICK bool +TNT null_tnt [ +MAIN tnt_main [ +PRB \"1\" +TAG \"TO\" ] +PRBS *null* +TAGS *null* ] +TO \"130\" +TRAIT token_trait [ +HD token_head [ +LL ctype [ -CTYPE- string ] +TG string +TI #2 ] +IT italics +LB bracket_null +RB bracket_null +UW - ] ]"))
           (970 generic_card_ne@aj_-_i-crd-gen_le 0 24 25
            ("6" 249
             "token [ +CARG #1=\"6\" +CLASS card_or_dom_ne +FORM #1 +FROM \"131\" +ID *diff-list* [ LAST #2=*list* LIST *cons* [ FIRST \"27\" REST #2 ] ] +PRED predsort +TICK bool +TNT null_tnt [ +MAIN tnt_main [ +PRB string +TAG string ] +PRBS *null* +TAGS *null* ] +TO \"132\" +TRAIT token_trait [ +HD token_head [ +LL ctype [ -CTYPE- string ] +TG string +TI string ] +IT italics +LB bracket_null +RB bracket_null +UW + ] ]"))))
         (32577 ^W_PERIOD_PLR 0.505644 25 26
          (32576 N_PL_OLR -0.041212 25 26
           (985 mips_n1@n_-_c-meas_le 0 25 26
            ("mips." 345
             "token [ +CARG \"MIPS\" +CLASS alphabetic [ +CASE capitalized+upper +INITIAL - ] +FORM \"mips.\" +FROM #1=\"133\" +ID *diff-list* [ LAST #2=*list* LIST *cons* [ FIRST \"28\" REST *cons* [ FIRST \"29\" REST #2 ] ] ] +PRED predsort +TICK bool +TNT null_tnt [ +MAIN tnt_main [ +PRB \"0.83956620000000004\" +TAG \"NNS\" ] +PRBS *null* +TAGS *null* ] +TO \"138\" +TRAIT token_trait [ +HD token_head [ +LL ctype [ -CTYPE- string ] +TG string +TI #1 ] +IT italics +LB bracket_null +RB bracket_null +UW - ] ]")))))))))))))

(S
 (S
  (NP (DET "the")
   (N (NP (N (N (N "intel")) (N (ADJ "486")))) (N (N "chip"))))
  (VP (V "can")
   (VP (V (V "process"))
    (NP
     (NP (DET (ADJ (ADJ "15") (ADJ "million")))
      (N (N (N (N "instructions")))
       (PP (P "per") (N (N (N "second,"))))))
     (NP-CJ (CONJ "or") (NP (N (N (N "mips,")))))))))
 (PP (P "while")
  (S
   (NP (DET (NP (N (N "intel"))) (DET "’s"))
    (N (AP "previous") (N (NP (N (N "386"))) (N (N "chip")))))
   (VP (V "could")
    (VP (V (V "handle"))
     (NP (ADV "only")
      (NP
       (N (ADJ (ADJ "3") (ADJ (ADJ "to") (ADJ "6")))
        (N (N (N "mips.")))))))))))


 [ TOP: h1
   INDEX: e3 [ e SF: PROP TENSE: PRES MOOD: INDICATIVE PROG: - PERF: - ]
   RELS: <
          [ _the_q<0:3>
            LBL: h4
            ARG0: x6 [ x PERS: 3 NUM: SG IND: + ]
            RSTR: h7
            BODY: h5 ]
          [ compound<4:18>
            LBL: h8
            ARG0: e10 [ e SF: PROP TENSE: UNTENSED MOOD: INDICATIVE PROG: - PERF: - ]
            ARG1: x6
            ARG2: x9 [ x PERS: 3 NUM: SG ] ]
          [ number_q<4:13>
            LBL: h11
            ARG0: x9
            RSTR: h12
            BODY: h13 ]
          [ compound<4:13>
            LBL: h14
            ARG0: e16 [ e SF: PROP TENSE: UNTENSED MOOD: INDICATIVE PROG: - PERF: - ]
            ARG1: x9
            ARG2: x15 [ x PERS: 3 NUM: SG IND: + ] ]
          [ udef_q<4:9>
            LBL: h17
            ARG0: x15
            RSTR: h18
            BODY: h19 ]
          [ named<4:9>
            LBL: h20
            ARG0: x15
            CARG: "Intel" ]
          [ card<10:13>
            LBL: h14
            ARG0: x9
            ARG1: i21
            CARG: "486" ]
          [ _chip_n_1<14:18>
            LBL: h8
            ARG0: x6 ]
          [ _can_v_modal<19:22>
            LBL: h22
            ARG0: e3
            ARG1: h23 ]
          [ _process_v_1<23:30>
            LBL: h24
            ARG0: e25 [ e SF: PROP TENSE: UNTENSED MOOD: INDICATIVE PROG: - PERF: - ]
            ARG1: x6
            ARG2: x26 ]
          [ udef_q<31:75>
            LBL: h27
            ARG0: x26
            RSTR: h28
            BODY: h29 ]
          [ udef_q<31:41>
            LBL: h30
            ARG0: x31 [ x PERS: 3 NUM: PL ]
            RSTR: h32
            BODY: h33 ]
          [ card<31:33>
            LBL: h34
            ARG0: i36
            ARG1: i35
            CARG: "15" ]
          [ card<34:41>
            LBL: h37
            ARG0: e38 [ e SF: PROP TENSE: UNTENSED MOOD: INDICATIVE PROG: - PERF: - ]
            ARG1: x31
            CARG: "1000000" ]
          [ times<34:41>
            LBL: h39
            ARG0: i40
            ARG1: i35
            ARG2: h34
            ARG3: h37 ]
          [ _instruction_n_of<42:54>
            LBL: h39
            ARG0: x31
            ARG1: i41 ]
          [ _per_p<55:58>
            LBL: h39
            ARG0: e42 [ e SF: PROP TENSE: UNTENSED MOOD: INDICATIVE PROG: - PERF: - ]
            ARG1: x31
            ARG2: x43 [ x PERS: 3 NUM: SG IND: + ] ]
          [ udef_q<55:58>
            LBL: h44
            ARG0: x43
            RSTR: h45
            BODY: h46 ]
          [ _second_n_1<59:66>
            LBL: h47
            ARG0: x43 ]
          [ _or_c<67:69>
            LBL: h48
            ARG0: x26
            L-INDEX: x31
            R-INDEX: x49 [ x PERS: 3 NUM: PL IND: + ] ]
          [ udef_q<70:75>
            LBL: h50
            ARG0: x49
            RSTR: h51
            BODY: h52 ]
          [ _mips_n_1<70:75>
            LBL: h53
            ARG0: x49 ]
          [ _while_x<76:81>
            LBL: h2
            ARG0: e54 [ e SF: PROP TENSE: UNTENSED MOOD: INDICATIVE PROG: - PERF: - ]
            ARG1: h55
            ARG2: h56 ]
          [ proper_q<82:87>
            LBL: h57
            ARG0: x59 [ x PERS: 3 NUM: SG IND: + ]
            RSTR: h58
            BODY: h60 ]
          [ named<82:87>
            LBL: h61
            ARG0: x59
            CARG: "Intel" ]
          [ def_explicit_q<87:89>
            LBL: h62
            ARG0: x64 [ x PERS: 3 NUM: SG IND: + ]
            RSTR: h63
            BODY: h65 ]
          [ poss<87:89>
            LBL: h66
            ARG0: e67 [ e SF: PROP TENSE: UNTENSED MOOD: INDICATIVE PROG: - PERF: - ]
            ARG1: x64
            ARG2: x59 ]
          [ _previous_a_1<90:98>
            LBL: h66
            ARG0: e68 [ e SF: PROP TENSE: UNTENSED MOOD: INDICATIVE PROG: - PERF: - ]
            ARG1: x64 ]
          [ compound<99:107>
            LBL: h66
            ARG0: e70 [ e SF: PROP TENSE: UNTENSED MOOD: INDICATIVE PROG: - PERF: - ]
            ARG1: x64
            ARG2: x69 [ x PERS: 3 NUM: SG IND: + ] ]
          [ proper_q<99:102>
            LBL: h71
            ARG0: x69
            RSTR: h72
            BODY: h73 ]
          [ yofc<99:102>
            LBL: h74
            ARG0: x69
            CARG: "386" ]
          [ _chip_n_1<103:107>
            LBL: h66
            ARG0: x64 ]
          [ _can_v_modal<108:113>
            LBL: h75
            ARG0: e77 [ e SF: PROP TENSE: PAST MOOD: INDICATIVE PROG: - PERF: - ]
            ARG1: h76 ]
          [ _handle_v_1<114:120>
            LBL: h78
            ARG0: e79 [ e SF: PROP TENSE: UNTENSED MOOD: INDICATIVE PROG: - PERF: - ]
            ARG1: x64
            ARG2: x80 [ x PERS: 3 NUM: PL IND: + ] ]
          [ _only_x_deg<121:125>
            LBL: h81
            ARG0: e82 [ e SF: PROP TENSE: UNTENSED MOOD: INDICATIVE PROG: - PERF: - ]
            ARG1: u83 ]
          [ udef_q<126:138>
            LBL: h81
            ARG0: x80
            RSTR: h84
            BODY: h85 ]
          [ card<126:127>
            LBL: h86
            ARG0: i88
            ARG1: i87
            CARG: "3" ]
          [ interval_p_end<128:130>
            LBL: h89
            ARG0: e92 [ e SF: PROP TENSE: UNTENSED MOOD: INDICATIVE PROG: - PERF: - ]
            ARG1: i91
            ARG2: i90 ]
          [ interval_p_start<128:130>
            LBL: h89
            ARG0: e93 [ e SF: PROP TENSE: UNTENSED MOOD: INDICATIVE PROG: - PERF: - ]
            ARG1: i91
            ARG2: i87 ]
          [ elliptical_n<128:130>
            LBL: h86
            ARG0: i87 ]
          [ udef_q<128:130>
            LBL: h94
            ARG0: i87
            RSTR: h95
            BODY: h96 ]
          [ elliptical_n<128:130>
            LBL: h97
            ARG0: i90 ]
          [ udef_q<128:130>
            LBL: h98
            ARG0: i90
            RSTR: h99
            BODY: h100 ]
          [ interval<128:130>
            LBL: h89
            ARG0: i91 ]
          [ udef_q<128:130>
            LBL: h101
            ARG0: i91
            RSTR: h102
            BODY: h103 ]
          [ loc_nonsp<128:130>
            LBL: h104
            ARG0: e105 [ e SF: PROP TENSE: UNTENSED MOOD: INDICATIVE PROG: - PERF: - ]
            ARG1: x80
            ARG2: i91 ]
          [ card<131:132>
            LBL: h97
            ARG0: i106
            ARG1: i90
            CARG: "6" ]
          [ _mips_n_1<133:138>
            LBL: h104
            ARG0: x80 ] >
   HCONS: < h99 QEQ h97 h95 QEQ h86 h102 QEQ h89 h84 QEQ h104 h76 QEQ h78 h72 QEQ h74 h63 QEQ h66 h58 QEQ h61 h56 QEQ h75 h55 QEQ h22 h51 QEQ h53 h45 QEQ h47 h32 QEQ h39 h28 QEQ h48 h23 QEQ h24 h18 QEQ h20 h12 QEQ h14 h7 QEQ h8 h1 QEQ h2 > ]

{e54:
 _1:_the_q<0:3>[BV x6]
 e10:compound<4:18>{e SF prop, TENSE untensed, MOOD indicative, PROG -, PERF -}[ARG1 x6, ARG2 x9]
 _2:number_q<4:13>[BV x9]
 e16:compound<4:13>{e SF prop, TENSE untensed, MOOD indicative, PROG -, PERF -}[ARG1 x9, ARG2 x15]
 _3:udef_q<4:9>[BV x15]
 x15:named<4:9>("Intel"){x PERS 3, NUM sg, IND +}[]
 x9:card<10:13>("486"){x PERS 3, NUM sg}[]
 x6:_chip_n_1<14:18>{x PERS 3, NUM sg, IND +}[]
 e3:_can_v_modal<19:22>{e SF prop, TENSE pres, MOOD indicative, PROG -, PERF -}[ARG1 e25]
 e25:_process_v_1<23:30>{e SF prop, TENSE untensed, MOOD indicative, PROG -, PERF -}[ARG1 x6, ARG2 x26]
 _4:udef_q<31:75>[BV x26]
 _5:udef_q<31:41>[BV x31]
 i36:card<31:33>("15"){i}[]
 e38:card<34:41>("1000000"){e SF prop, TENSE untensed, MOOD indicative, PROG -, PERF -}[ARG1 x31]
 i40:times<34:41>{i}[ARG2 i36, ARG3 e38]
 x31:_instruction_n_of<42:54>{x PERS 3, NUM pl}[]
 e42:_per_p<55:58>{e SF prop, TENSE untensed, MOOD indicative, PROG -, PERF -}[ARG1 x31, ARG2 x43]
 _6:udef_q<55:58>[BV x43]
 x43:_second_n_1<59:66>{x PERS 3, NUM sg, IND +}[]
 x26:_or_c<67:69>{x}[L-INDEX x31, R-INDEX x49]
 _7:udef_q<70:75>[BV x49]
 x49:_mips_n_1<70:75>{x PERS 3, NUM pl, IND +}[]
 e54:_while_x<76:81>{e SF prop, TENSE untensed, MOOD indicative, PROG -, PERF -}[ARG1 e3, ARG2 e77]
 _8:proper_q<82:87>[BV x59]
 x59:named<82:87>("Intel"){x PERS 3, NUM sg, IND +}[]
 _9:def_explicit_q<87:89>[BV x64]
 e67:poss<87:89>{e SF prop, TENSE untensed, MOOD indicative, PROG -, PERF -}[ARG1 x64, ARG2 x59]
 e68:_previous_a_1<90:98>{e SF prop, TENSE untensed, MOOD indicative, PROG -, PERF -}[ARG1 x64]
 e70:compound<99:107>{e SF prop, TENSE untensed, MOOD indicative, PROG -, PERF -}[ARG1 x64, ARG2 x69]
 _10:proper_q<99:102>[BV x69]
 x69:yofc<99:102>("386"){x PERS 3, NUM sg, IND +}[]
 x64:_chip_n_1<103:107>{x PERS 3, NUM sg, IND +}[]
 e77:_can_v_modal<108:113>{e SF prop, TENSE past, MOOD indicative, PROG -, PERF -}[ARG1 e79]
 e79:_handle_v_1<114:120>{e SF prop, TENSE untensed, MOOD indicative, PROG -, PERF -}[ARG1 x64, ARG2 x80]
 e82:_only_x_deg<121:125>{e SF prop, TENSE untensed, MOOD indicative, PROG -, PERF -}[ARG1 _11]
 _11:udef_q<126:138>[BV x80]
 i88:card<126:127>("3"){i}[ARG1 i87]
 e92:interval_p_end<128:130>{e SF prop, TENSE untensed, MOOD indicative, PROG -, PERF -}[ARG1 i91, ARG2 i90]
 e93:interval_p_start<128:130>{e SF prop, TENSE untensed, MOOD indicative, PROG -, PERF -}[ARG1 i91, ARG2 i87]
 i87:elliptical_n<128:130>{i}[]
 _12:udef_q<128:130>[BV i87]
 i90:elliptical_n<128:130>{i}[]
 _13:udef_q<128:130>[BV i90]
 i91:interval<128:130>{i}[]
 _14:udef_q<128:130>[BV i91]
 e105:loc_nonsp<128:130>{e SF prop, TENSE untensed, MOOD indicative, PROG -, PERF -}[ARG1 x80, ARG2 i91]
 i106:card<131:132>("6"){i}[ARG1 i90]
 x80:_mips_n_1<133:138>{x PERS 3, NUM pl, IND +}[]
}

{
  _the_q<0:3> BV _chip_n_1<14:18>  
  compound<4:18> ARG1 _chip_n_1<14:18>  
  compound<4:18> ARG2 card<10:13>(486)  
  number_q<4:13> BV card<10:13>(486)  
  compound<4:13> ARG1 card<10:13>(486)  
  compound<4:13> ARG2 named<4:9>(Intel)  
  udef_q<4:9> BV named<4:9>(Intel)  
  _can_v_modal<19:22> ARG1 _process_v_1<23:30>  
  _process_v_1<23:30> ARG1 _chip_n_1<14:18>  
  _process_v_1<23:30> ARG2 _or_c<67:69>  
  udef_q<31:75> BV _or_c<67:69>  
  udef_q<31:41> BV _instruction_n_of<42:54>  
  card<34:41>(1000000) ARG1 _instruction_n_of<42:54>  
  times<34:41> ARG2 card<31:33>(15)  
  times<34:41> ARG3 card<34:41>(1000000)  
  _per_p<55:58> ARG1 _instruction_n_of<42:54>  
  _per_p<55:58> ARG2 _second_n_1<59:66>  
  udef_q<55:58> BV _second_n_1<59:66>  
  _or_c<67:69> L-INDEX _instruction_n_of<42:54>  
  _or_c<67:69> R-INDEX _mips_n_1<70:75>  
  udef_q<70:75> BV _mips_n_1<70:75>  
  _while_x<76:81> ARG1 _can_v_modal<19:22>  
  _while_x<76:81> ARG2 _can_v_modal<108:113>  
  proper_q<82:87> BV named<82:87>(Intel)  
  def_explicit_q<87:89> BV _chip_n_1<103:107>  
  poss<87:89> ARG1 _chip_n_1<103:107>  
  poss<87:89> ARG2 named<82:87>(Intel)  
  _previous_a_1<90:98> ARG1 _chip_n_1<103:107>  
  compound<99:107> ARG1 _chip_n_1<103:107>  
  compound<99:107> ARG2 yofc<99:102>(386)  
  proper_q<99:102> BV yofc<99:102>(386)  
  _can_v_modal<108:113> ARG1 _handle_v_1<114:120>  
  _handle_v_1<114:120> ARG1 _chip_n_1<103:107>  
  _handle_v_1<114:120> ARG2 _mips_n_1<133:138>  
  _only_x_deg<121:125> ARG1 udef_q<126:138>  
  udef_q<126:138> BV _mips_n_1<133:138>  
  card<126:127>(3) ARG1 elliptical_n<128:130>  
  interval_p_end<128:130> ARG1 interval<128:130>  
  interval_p_end<128:130> ARG2 elliptical_n<128:130>  
  interval_p_start<128:130> ARG1 interval<128:130>  
  interval_p_start<128:130> ARG2 elliptical_n<128:130>  
  udef_q<128:130> BV elliptical_n<128:130>  
  udef_q<128:130> BV elliptical_n<128:130>  
  udef_q<128:130> BV interval<128:130>  
  loc_nonsp<128:130> ARG1 _mips_n_1<133:138>  
  loc_nonsp<128:130> ARG2 interval<128:130>  
  card<131:132>(6) ARG1 elliptical_n<128:130>  
  compound<4:18> SF prop  
  compound<4:18> TENSE untensed  
  compound<4:18> MOOD indicative  
  compound<4:18> PROG -  
  compound<4:18> PERF -  
  compound<4:13> SF prop  
  compound<4:13> TENSE untensed  
  compound<4:13> MOOD indicative  
  compound<4:13> PROG -  
  compound<4:13> PERF -  
  named<4:9>(Intel) PERS 3  
  named<4:9>(Intel) NUM sg  
  named<4:9>(Intel) IND +  
  card<10:13>(486) PERS 3  
  card<10:13>(486) NUM sg  
  _chip_n_1<14:18> PERS 3  
  _chip_n_1<14:18> NUM sg  
  _chip_n_1<14:18> IND +  
  _can_v_modal<19:22> SF prop  
  _can_v_modal<19:22> TENSE pres  
  _can_v_modal<19:22> MOOD indicative  
  _can_v_modal<19:22> PROG -  
  _can_v_modal<19:22> PERF -  
  _process_v_1<23:30> SF prop  
  _process_v_1<23:30> TENSE untensed  
  _process_v_1<23:30> MOOD indicative  
  _process_v_1<23:30> PROG -  
  _process_v_1<23:30> PERF -  
  card<34:41>(1000000) SF prop  
  card<34:41>(1000000) TENSE untensed  
  card<34:41>(1000000) MOOD indicative  
  card<34:41>(1000000) PROG -  
  card<34:41>(1000000) PERF -  
  _instruction_n_of<42:54> PERS 3  
  _instruction_n_of<42:54> NUM pl  
  _per_p<55:58> SF prop  
  _per_p<55:58> TENSE untensed  
  _per_p<55:58> MOOD indicative  
  _per_p<55:58> PROG -  
  _per_p<55:58> PERF -  
  _second_n_1<59:66> PERS 3  
  _second_n_1<59:66> NUM sg  
  _second_n_1<59:66> IND +  
  _mips_n_1<70:75> PERS 3  
  _mips_n_1<70:75> NUM pl  
  _mips_n_1<70:75> IND +  
  _while_x<76:81> SF prop  
  _while_x<76:81> TENSE untensed  
  _while_x<76:81> MOOD indicative  
  _while_x<76:81> PROG -  
  _while_x<76:81> PERF -  
  named<82:87>(Intel) PERS 3  
  named<82:87>(Intel) NUM sg  
  named<82:87>(Intel) IND +  
  poss<87:89> SF prop  
  poss<87:89> TENSE untensed  
  poss<87:89> MOOD indicative  
  poss<87:89> PROG -  
  poss<87:89> PERF -  
  _previous_a_1<90:98> SF prop  
  _previous_a_1<90:98> TENSE untensed  
  _previous_a_1<90:98> MOOD indicative  
  _previous_a_1<90:98> PROG -  
  _previous_a_1<90:98> PERF -  
  compound<99:107> SF prop  
  compound<99:107> TENSE untensed  
  compound<99:107> MOOD indicative  
  compound<99:107> PROG -  
  compound<99:107> PERF -  
  yofc<99:102>(386) PERS 3  
  yofc<99:102>(386) NUM sg  
  yofc<99:102>(386) IND +  
  _chip_n_1<103:107> PERS 3  
  _chip_n_1<103:107> NUM sg  
  _chip_n_1<103:107> IND +  
  _can_v_modal<108:113> SF prop  
  _can_v_modal<108:113> TENSE past  
  _can_v_modal<108:113> MOOD indicative  
  _can_v_modal<108:113> PROG -  
  _can_v_modal<108:113> PERF -  
  _handle_v_1<114:120> SF prop  
  _handle_v_1<114:120> TENSE untensed  
  _handle_v_1<114:120> MOOD indicative  
  _handle_v_1<114:120> PROG -  
  _handle_v_1<114:120> PERF -  
  _only_x_deg<121:125> SF prop  
  _only_x_deg<121:125> TENSE untensed  
  _only_x_deg<121:125> MOOD indicative  
  _only_x_deg<121:125> PROG -  
  _only_x_deg<121:125> PERF -  
  interval_p_end<128:130> SF prop  
  interval_p_end<128:130> TENSE untensed  
  interval_p_end<128:130> MOOD indicative  
  interval_p_end<128:130> PROG -  
  interval_p_end<128:130> PERF -  
  interval_p_start<128:130> SF prop  
  interval_p_start<128:130> TENSE untensed  
  interval_p_start<128:130> MOOD indicative  
  interval_p_start<128:130> PROG -  
  interval_p_start<128:130> PERF -  
  loc_nonsp<128:130> SF prop  
  loc_nonsp<128:130> TENSE untensed  
  loc_nonsp<128:130> MOOD indicative  
  loc_nonsp<128:130> PROG -  
  loc_nonsp<128:130> PERF -  
  _mips_n_1<133:138> PERS 3  
  _mips_n_1<133:138> NUM pl  
  _mips_n_1<133:138> IND +  
}

